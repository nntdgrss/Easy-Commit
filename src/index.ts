import { commitMessages } from "./lib/commits";
import { Commands } from "./utils/commands";
import { program } from "commander";
import { exit } from "process";

/**
 * –¶–≤–µ—Ç–∞ –¥–ª—è –∫–æ–Ω—Å–æ–ª—å–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
 */
const colors = {
  reset: "\x1b[0m",
  bright: "\x1b[1m",
  green: "\x1b[32m",
  yellow: "\x1b[33m",
  red: "\x1b[31m",
  cyan: "\x1b[36m",
};

/**
 * –û–±–æ—Ä–∞—á–∏–≤–∞–µ—Ç —Ç–µ–∫—Å—Ç –≤ —Ü–≤–µ—Ç
 */
const colorize = {
  success: (text: string) => `${colors.green}${text}${colors.reset}`,
  warning: (text: string) => `${colors.yellow}${text}${colors.reset}`,
  error: (text: string) => `${colors.red}${text}${colors.reset}`,
  info: (text: string) => `${colors.cyan}${text}${colors.reset}`,
  bold: (text: string) => `${colors.bright}${text}${colors.reset}`,
};

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ CLI –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
program
  .option("-p, --push", "–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∫–æ–º–º–∏—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä")
  .option("-m, --message <message>", "–ó–∞–¥–∞—Ç—å —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –∫–æ–º–º–∏—Ç–∞")
  .option("-v, --verbose", "–ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é")
  .parse(process.argv);

const options = program.opts();

/**
 * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å–ª—É—á–∞–π–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –∫–æ–º–º–∏—Ç–∞ –∏–∑ –º–∞—Å—Å–∏–≤–∞ —à–∞–±–ª–æ–Ω–æ–≤
 */
function generateCommitMessage(): string {
  if (!commitMessages?.length) {
    return "feat: –¥–æ–±–∞–≤–ª–µ–Ω –Ω–æ–≤—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª";
  }

  const randomIndex = Math.floor(Math.random() * commitMessages.length);
  const message = commitMessages[randomIndex];

  if (!message) {
    return "feat: –¥–æ–±–∞–≤–ª–µ–Ω –Ω–æ–≤—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª";
  }

  return message;
}

/**
 * –í—ã–≤–æ–¥–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∫–æ–Ω—Å–æ–ª—å, –µ—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω —Ä–µ–∂–∏–º verbose
 */
function logVerbose(message: string): void {
  if (options.verbose) {
    console.log(colorize.info(`[INFO] ${message}`));
  }
}

/**
 * –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
 */
async function main() {
  try {
    console.log(colorize.bold("‚ú® Easy commit. –†–∞–±–æ—Ç–∞–µ–º —Å Git..."));

    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏
    logVerbose("–ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è...");
    const status: string = await Commands.status();

    if (status.trim() === "") {
      console.log(
        colorize.warning("üö´ –ù–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏. –ù–µ—á–µ–≥–æ –∫–æ–º–º–∏—Ç–∏—Ç—å.")
      );
      return;
    }

    logVerbose(`–ù–∞–π–¥–µ–Ω—ã –∏–∑–º–µ–Ω–µ–Ω–∏—è:\n${status}`);

    // 2. –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –∫–æ–º–º–∏—Ç–∞
    const message: string = options.message || generateCommitMessage();
    logVerbose(`–°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –∫–æ–º–º–∏—Ç–∞: ${message}`);

    // 3. –î–æ–±–∞–≤–ª—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –∏–Ω–¥–µ–∫—Å
    logVerbose("–î–æ–±–∞–≤–ª—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –∏–Ω–¥–µ–∫—Å...");
    await Commands.add();

    // 4. –°–æ–∑–¥–∞–µ–º –∫–æ–º–º–∏—Ç
    logVerbose("–°–æ–∑–¥–∞–µ–º –∫–æ–º–º–∏—Ç...");
    await Commands.commit(message);
    console.log(
      colorize.success(`‚úÖ –ö–æ–º–º–∏—Ç —Å–æ–∑–¥–∞–Ω: ${colorize.bold(message)}`)
    );

    // 5. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä, –µ—Å–ª–∏ —É–∫–∞–∑–∞–Ω —Ñ–ª–∞–≥ --push
    if (options.push) {
      logVerbose("–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä...");
      await Commands.push();
      console.log(
        colorize.success("üöÄ –ò–∑–º–µ–Ω–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä")
      );
    } else {
      console.log(
        colorize.info(
          "‚ÑπÔ∏è –î–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–ª–∞–≥ --push"
        )
      );
    }
  } catch (error) {
    console.error(
      colorize.error(
        `‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: ${
          error instanceof Error ? error.message : String(error)
        }`
      )
    );
    exit(1);
  }
}

// –ó–∞–ø—É—Å–∫
main();
